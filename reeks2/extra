

    //Find the inverse of matrix A and use it to calculate  A^-1 * Y so we can compare this result with X
    gsl_matrix *inv = gsl_matrix_alloc(size_j, size_j);
    //The result of A^-1 * Y will be stored in C
    gsl_matrix *C = gsl_matrix_alloc(size_i, 1);
    //We need to put the vector Y in matrix representation YY
    gsl_matrix_view YY = gsl_matrix_view_vector(Y, size_j, 1);

    //Store the inverse of A in inv,
    gsl_linalg_LU_invert(LU, P, inv);
    //Store the result of A^-1 * Y in C
    gsl_blas_dgemm(CblasNoTrans, CblasNoTrans, 1, inv, &YY.matrix, 0, C);

    //Ax = Y => r2 = - Ax + Y
    gsl_vector *r2 = gsl_vector_alloc(size_j);
    gsl_vector_memcpy(r2, Y);
    gsl_blas_dgemv(CblasNoTrans, -1, A, X, 1, r2);

    /*printMatrixCoutAndFile(inv, "Inverse of A", out);
    printMatrixCoutAndFile(&YY.matrix, "Input Vector Y", out);
    printMatrixCoutAndFile(C, "inverse(A) * Y", out);
    printVectorCoutAndFile(r2, "residual by doing a: -Ax + Y", out);*/
    /*printMatrixCoutAndFile(U, "U", out);
    printMatrixCoutAndFile(V, "V", out);*/



    //std::cout << "Epsilon on this machine: " << std::setprecision(15) << std::nextafter(0, 1) << "\n";
    //out << "Epsilon on this machine: " << std::setprecision(15) << std::nextafter(0, 1) << "\n";
    //2.22e-16
